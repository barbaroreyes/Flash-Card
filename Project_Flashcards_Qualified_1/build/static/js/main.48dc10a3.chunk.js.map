{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","decks/Decks.js","utils/api/index.js","decks/Deck.js","decks/NewDeck.js","decks/StudyDeck.js","decks/EditDeck.js","cards/AddCard.js","cards/EditCard.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","Decks","deckCollection","setCurrentDeck","deleteDeckHandler","cardCollection","NewDeckButton","GetDecks","to","style","alignItems","xmlns","width","height","fill","viewBox","d","map","deck","index","key","name","cards","length","description","id","onClick","fillRule","window","confirm","API_BASE_URL","process","headers","Headers","stripCards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","listDecks","signal","method","body","JSON","stringify","readDeck","deckId","updatedDeck","deleteDeck","listCards","card","Number","readCard","cardId","updatedCard","Deck","renderData","currentDeck","setDeckCollection","setCurrentCard","setCardCollection","deleteCardHandler","useRouteMatch","deckUrl","params","ShowDeck","useEffect","setDecks","setDeck","setCards","render","ShowCards","front","back","aria-label","aria-current","append","NewDeck","history","useHistory","lastDeck","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","createDeck","push","htmlFor","type","placeholder","onChange","required","rows","StudyDeck","isFront","setIsFront","setIndex","currentCard","total","invisible","visibility","currentState","StudyOptions","prevState","handleNext","EditDeck","refreshPage","updateDeck","AddCard","createCard","EditCard","setCard","correctCard","updateCard","Layout","location","reload","displayDecks","exact","path","deleteCard","go","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48dc10a3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark \">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\nexport default function Decks({\r\n  deckCollection,\r\n  setCurrentDeck,\r\n  deleteDeckHandler,\r\n  cardCollection,\r\n}) {\r\n  let deckList = []\r\n\r\n  // const url = useRouteMatch()\r\n\r\n  return (\r\n    <div>\r\n      <NewDeckButton />\r\n      <div className='list-group'>\r\n        <GetDecks />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  // Components\r\n\r\n  function NewDeckButton() {\r\n    return (\r\n      <Link\r\n        to='/decks/new'\r\n        className='btn btn-secondary btn-lg mb-3'\r\n        style={{ alignItems: 'center' }}\r\n      >\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          width='2rem'\r\n          height='2rem'\r\n          fill='currentColor'\r\n          className='bi bi-plus'\r\n          viewBox='0 0 16 18'\r\n        >\r\n          <path d='M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z' />\r\n        </svg>\r\n        Create Deck\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  function GetDecks() {\r\n    return (deckList = deckCollection.map((deck, index) => (\r\n      <div\r\n        className='list-group-item list-group-item-action flex-column align-items-start'\r\n        key={index}\r\n      >\r\n        <div className='d-flex w-100 justify-content-between'>\r\n          <h5 className='mb-1'>{deck.name}</h5>\r\n          <small>{deck.cards.length} cards</small>\r\n        </div>\r\n        <p className='mb-1'>{deck.description}</p>\r\n\r\n        <div className='btns d-flex'>\r\n          {/* View */}\r\n          <Link\r\n            to={`decks/${deck.id}`}\r\n            className='btn btn-secondary mr-2'\r\n            onClick={() => setCurrentDeck(deck)}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-eye mr-1'\r\n            >\r\n              <path d='M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z' />\r\n              <path d='M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z' />\r\n            </svg>\r\n            View\r\n          </Link>\r\n          {/* Study */}\r\n          <Link\r\n            to={`decks/${deck.id}/study`}\r\n            className='btn btn-primary mr-2'\r\n            onClick={() => setCurrentDeck(deck)}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-journal-bookmark-fill mr-1'\r\n            >\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z'\r\n              />\r\n              <path d='M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z' />\r\n              <path d='M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z' />\r\n            </svg>\r\n            Study\r\n          </Link>\r\n          {/* Delete */}\r\n          <button\r\n            className='btn btn-danger ml-auto'\r\n            onClick={() => {\r\n              if (window.confirm('Delete this deck?'))\r\n                deleteDeckHandler(deck, cardCollection)\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-trash'\r\n            >\r\n              <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )))\r\n  }\r\n}\r\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, { useEffect } from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport { listCards, listDecks, readDeck } from '../utils/api/index'\r\n\r\nexport default function Deck({\r\n  renderData,\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  setDeckCollection,\r\n  setCurrentCard,\r\n  cardCollection,\r\n  setCardCollection,\r\n  deleteCardHandler,\r\n  deleteDeckHandler,\r\n}) {\r\n  const url = useRouteMatch()\r\n  const deckUrl = url.url\r\n  const deckId = url.params.deckId\r\n\r\n  // Displays the collection of decks saved in the database\r\n\r\n  useEffect(() => {\r\n    async function render() {\r\n      const setDecks = await listDecks()\r\n      await setDeckCollection(setDecks)\r\n      const setDeck = await readDeck(deckId)\r\n      await setCurrentDeck(setDeck)\r\n      const setCards = await listCards(deckId)\r\n      await setCardCollection(setCards)\r\n    }\r\n    render()\r\n  }, [])\r\n\r\n  // Components\r\n\r\n  function ShowDeck() {\r\n    return (\r\n      <div className='deck'>\r\n        <h5>{currentDeck.name}</h5>\r\n        <p>{currentDeck.description}</p>\r\n        <div className='btns d-flex'>\r\n          {/* Edit Deck */}\r\n          <Link to={`${deckUrl}/edit`} className='btn btn-secondary mr-2'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-pencil-fill'\r\n              viewBox='0 0 16 20'\r\n            >\r\n              <path d='M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z' />\r\n            </svg>\r\n            Edit\r\n          </Link>\r\n          {/* Study */}\r\n          <Link to={`${deckId}/study`} className='btn btn-primary mr-2'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-journal-bookmark-fill mr-1'\r\n              viewBox='0 0 16 20'\r\n            >\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z'\r\n              />\r\n              <path d='M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z' />\r\n              <path d='M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z' />\r\n            </svg>\r\n            Study\r\n          </Link>\r\n          {/* Add Cards */}\r\n          <Link to={`${deckUrl}/cards/new`} className='btn btn-primary'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-plus-circle-fill mr-1'\r\n              viewBox='0 0 16 20'\r\n            >\r\n              <path d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z' />\r\n            </svg>\r\n            Add Cards\r\n          </Link>\r\n          {/* Delete */}\r\n          <button\r\n            className='btn btn-danger ml-auto'\r\n            onClick={() => {\r\n              if (window.confirm('Delete this deck?'))\r\n                deleteDeckHandler(currentDeck, cardCollection)\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-trash'\r\n            >\r\n              <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let deckOfCards = []\r\n\r\n  function ShowCards() {\r\n    return (deckOfCards = cardCollection.map((card, index) => (\r\n      <div\r\n        className='list-group-item list-group-item-action flex-column align-items-start'\r\n        key={index}\r\n      >\r\n        <div className='row'>\r\n          <p className='mb-1 col-6'>{card.front}</p>\r\n          <p className='mb-1 col-6'>{card.back}</p>\r\n        </div>\r\n\r\n        <div className='btns float-right'>\r\n          {/* Edit Card */}\r\n          <Link\r\n            to={`${deckUrl}/cards/${card.id}/edit`}\r\n            className='btn btn-secondary mr-2'\r\n            onClick={setCurrentCard(card)}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-pencil-fill'\r\n              viewBox='0 0 16 20'\r\n            >\r\n              <path d='M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z' />\r\n            </svg>\r\n            Edit\r\n          </Link>\r\n          {/* Delete Card */}\r\n          <button\r\n            className='btn btn-danger'\r\n            onClick={() => {\r\n              if (window.confirm('Delete this card?')) deleteCardHandler(card)\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-trash'\r\n            >\r\n              <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n              <path\r\n                fillRule='evenodd'\r\n                d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            {currentDeck.name}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <ShowDeck />\r\n      <h2 className='mt-3'>Cards</h2>\r\n      <div className='card'>\r\n        <ShowCards />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { createDeck } from '../utils/api/index'\r\n\r\nexport default function NewDeck({ deckCollection, setDeckCollection }) {\r\n  const history = useHistory()\r\n  const initialState = {\r\n    name: '',\r\n    description: '',\r\n  }\r\n\r\n  let lastDeck = deckCollection[deckCollection.length - 1]\r\n\r\n  const [formData, setFormData] = useState({ ...initialState })\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const response = createDeck(formData)\r\n    setDeckCollection(...deckCollection, response)\r\n    history.push(`/decks/${lastDeck.id + 1}`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            Create Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <div className='content'>\r\n        <h1>Create Deck</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='form-group'>\r\n            <label htmlFor='name'>Name</label>\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              id='name'\r\n              className='form-control'\r\n              placeholder='Deck Name'\r\n              onChange={handleChange}\r\n              value={formData.name}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='description'>Description</label>\r\n            <textarea\r\n              name='description'\r\n              id='description'\r\n              rows='5'\r\n              placeholder='Brief description of the deck'\r\n              className='form-control'\r\n              onChange={handleChange}\r\n              value={formData.description}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className='btns mb-3'>\r\n            <Link to='/' className='btn btn-secondary mr-2'>\r\n              Cancel\r\n            </Link>\r\n            <button type='submit' className='btn btn-primary'>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom'\r\nimport { listDecks, listCards, readDeck } from '../utils/api/index'\r\n\r\nexport default function StudyDeck({\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  setDeckCollection,\r\n  setCardCollection,\r\n}) {\r\n  const [isFront, setIsFront] = useState(true)\r\n  const [index, setIndex] = useState(0)\r\n  const history = useHistory()\r\n\r\n  // Get info from the current url\r\n  const url = useRouteMatch()\r\n  const deckId = url.params.deckId\r\n\r\n  // render the pieces of state\r\n  useEffect(() => {\r\n    async function render() {\r\n      const setDecks = await listDecks()\r\n      await setDeckCollection(setDecks)\r\n      const setDeck = await readDeck(deckId)\r\n      await setCurrentDeck(setDeck)\r\n      const setCards = await listCards(deckId)\r\n      await setCardCollection(setCards)\r\n    }\r\n    render()\r\n  }, [])\r\n\r\n  let currentCard = currentDeck.cards[index]\r\n  const front = currentCard.front\r\n  const back = currentCard.back\r\n  const total = currentDeck.cards.length\r\n\r\n  const visible = { visibility: 'visible' }\r\n  const invisible = { visibility: 'hidden' }\r\n\r\n  let currentState = front\r\n  let visibility = invisible\r\n\r\n  if (isFront) {\r\n    currentState = front\r\n    visibility = invisible\r\n  } else {\r\n    currentState = back\r\n    visibility = visible\r\n  }\r\n\r\n  const handleFlip = () => {\r\n    setIsFront((prevState) => !prevState)\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (index + 1 < total) {\r\n      currentCard = currentDeck.cards[setIndex(index + 1)]\r\n      setIsFront(true)\r\n    } else {\r\n      if (window.confirm('Restart cards?')) {\r\n        setIsFront(true)\r\n        return currentDeck.cards[setIndex(0)]\r\n      } else {\r\n        history.push('/')\r\n      }\r\n    }\r\n  }\r\n\r\n  function StudyOptions() {\r\n    if (total >= 3) {\r\n      return (\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <h4 className='card-title'>\r\n              Card {index + 1} of {total}\r\n            </h4>\r\n            <p className='card-text'>{currentState}</p>\r\n            <div className='btns'>\r\n              <button\r\n                className='btn btn-secondary mr-2'\r\n                onClick={() => handleFlip()}\r\n              >\r\n                Flip\r\n              </button>\r\n              <button\r\n                className='btn btn-primary'\r\n                style={visibility}\r\n                onClick={() => handleNext()}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3>Not enough cards.</h3>\r\n          <p>\r\n            You need at least 3 cards to study. There are\r\n            {` ${total}`} card(s) in this deck.\r\n          </p>\r\n          <Link to={`cards/new`} className='btn btn-primary'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              width='16'\r\n              height='16'\r\n              fill='currentColor'\r\n              className='bi bi-plus-circle-fill mr-1'\r\n              viewBox='0 0 16 20'\r\n            >\r\n              <path d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z' />\r\n            </svg>\r\n            Add Cards\r\n          </Link>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='breadcrumb-item'>\r\n            <Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link>\r\n          </li>\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <h2>{currentDeck.name}: Study</h2>\r\n\r\n      <StudyOptions />\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom'\r\nimport { listCards, listDecks, readDeck, updateDeck } from '../utils/api/index'\r\n\r\nexport default function EditDeck({\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  setDeckCollection,\r\n  setCardCollection,\r\n  refreshPage,\r\n}) {\r\n  const history = useHistory()\r\n  const url = useRouteMatch()\r\n  const deckId = url.params.deckId\r\n\r\n  useEffect(() => {\r\n    async function render() {\r\n      const setDecks = await listDecks()\r\n      await setDeckCollection(setDecks)\r\n      const setDeck = await readDeck(deckId)\r\n      await setCurrentDeck(setDeck)\r\n      const setCards = await listCards(deckId)\r\n      await setCardCollection(setCards)\r\n    }\r\n    render()\r\n  }, [])\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCurrentDeck({\r\n      ...currentDeck,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    updateDeck(currentDeck)\r\n    history.push(`/decks/${currentDeck.id}`)\r\n    refreshPage()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='breadcrumb-item'>\r\n            <Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link>\r\n          </li>\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            Edit Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='form-group'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            id='name'\r\n            className='form-control'\r\n            onChange={handleChange}\r\n            value={currentDeck.name}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='description'>Description</label>\r\n          <textarea\r\n            name='description'\r\n            id='description'\r\n            rows='5'\r\n            className='form-control'\r\n            onChange={handleChange}\r\n            value={currentDeck.description}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div className='btns mb-3'>\r\n          <Link\r\n            to={`/decks/${currentDeck.id}`}\r\n            className='btn btn-secondary mr-2'\r\n          >\r\n            Cancel\r\n          </Link>\r\n          <button type='submit' className='btn btn-primary'>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom'\r\nimport { listDecks, readDeck, listCards, createCard } from '../utils/api/index'\r\n\r\nexport default function AddCard({\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  cardCollection,\r\n  setCardCollection,\r\n  setDeckCollection,\r\n  refreshPage,\r\n}) {\r\n  const url = useRouteMatch()\r\n  const deckId = url.params.deckId\r\n  const cardId = url.params.cardId\r\n  useEffect(() => {\r\n    async function render() {\r\n      const setDecks = await listDecks()\r\n      await setDeckCollection(setDecks)\r\n      const setDeck = await readDeck(deckId)\r\n      await setCurrentDeck(setDeck)\r\n      const setCards = await listCards(deckId)\r\n      await setCardCollection(setCards)\r\n    }\r\n    render()\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const id = currentDeck.id\r\n\r\n  const initialState = {\r\n    front: '',\r\n    back: '',\r\n  }\r\n\r\n  const [formData, setFormData] = useState({ ...initialState })\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const response = createCard(id, formData)\r\n    setCardCollection(...cardCollection, response)\r\n    history.push(`/decks/${id}`)\r\n    refreshPage()\r\n  }\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='breadcrumb-item'>\r\n            <Link to={`/decks/${id}`}>{currentDeck.name}</Link>\r\n          </li>\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            Add Card\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>{currentDeck.name}: Add Card</h2>\r\n      <div className='content'>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='form-group'>\r\n            <label htmlFor='front'>Front</label>\r\n            <textarea\r\n              name='front'\r\n              id='front'\r\n              rows='5'\r\n              placeholder='Front side of card'\r\n              className='form-control'\r\n              onChange={handleChange}\r\n              value={formData.front}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Back</label>\r\n            <textarea\r\n              name='back'\r\n              id='back'\r\n              rows='5'\r\n              placeholder='Back side of card'\r\n              className='form-control'\r\n              onChange={handleChange}\r\n              value={formData.back}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className='btns mb-3'>\r\n            <Link to={`/decks/${id}`} className='btn btn-secondary mr-2'>\r\n              Cancel\r\n            </Link>\r\n            <button type='submit' className='btn btn-primary'>\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom'\r\nimport {\r\n  listDecks,\r\n  readDeck,\r\n  listCards,\r\n  updateCard,\r\n  readCard,\r\n} from '../utils/api/index'\r\n\r\nexport default function EditCard({\r\n  currentCard,\r\n  setCurrentCard,\r\n  currentDeck,\r\n  setCurrentDeck,\r\n  setDeckCollection,\r\n  setCardCollection,\r\n  refreshPage,\r\n}) {\r\n  const url = useRouteMatch()\r\n  const deckId = url.params.deckId\r\n  const cardId = url.params.cardId\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    async function render() {\r\n      const setDecks = await listDecks()\r\n      await setDeckCollection(setDecks)\r\n      const setDeck = await readDeck(deckId)\r\n      await setCurrentDeck(setDeck)\r\n      const setCards = await listCards(deckId)\r\n      await setCardCollection(setCards)\r\n      const setCard = await readCard(cardId)\r\n      await setCurrentCard(setCard)\r\n    }\r\n    render()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function correctCard() {\r\n      const response = await readCard(cardId)\r\n      setCurrentCard(response)\r\n    }\r\n    correctCard()\r\n  }, [])\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCurrentCard({\r\n      ...currentCard,\r\n      [target.name]: target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    updateCard(currentCard)\r\n    history.push(`/decks/${currentDeck.id}`)\r\n    refreshPage()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label='breadcrumb'>\r\n        <ol className='breadcrumb'>\r\n          <li className='breadcrumb-item'>\r\n            <Link to='/'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='20'\r\n                fill='currentColor'\r\n                className='bi bi-house-door-fill mr-1'\r\n                viewBox='0 3 16 16'\r\n              >\r\n                <path d='M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z' />\r\n              </svg>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='breadcrumb-item'>\r\n            <Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link>\r\n          </li>\r\n          <li className='breadcrumb-item active' aria-current='page'>\r\n            Edit Card {cardId}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h1>Edit Card</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='form-group'>\r\n          <label htmlFor='front'>Front</label>\r\n          <textarea\r\n            name='front'\r\n            id='front'\r\n            rows='5'\r\n            className='form-control'\r\n            onChange={handleChange}\r\n            value={currentCard.front}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Back</label>\r\n          <textarea\r\n            name='back'\r\n            id='back'\r\n            rows='5'\r\n            className='form-control'\r\n            onChange={handleChange}\r\n            value={currentCard.back}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div className='btns mb-3'>\r\n          <Link\r\n            to={`/decks/${currentDeck.id}`}\r\n            className='btn btn-secondary mr-2'\r\n          >\r\n            Cancel\r\n          </Link>\r\n          <button type='submit' className='btn btn-primary'>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import { Switch, Route, useRouteMatch, useHistory } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\nimport Header from './Header'\nimport NotFound from './NotFound'\nimport Decks from '../decks/Decks'\nimport Deck from '../decks/Deck'\nimport NewDeck from '../decks/NewDeck'\nimport StudyDeck from '../decks/StudyDeck'\nimport EditDeck from '../decks/EditDeck'\nimport AddCard from '../cards/AddCard'\nimport EditCard from '../cards/EditCard'\nimport {\n  listDecks,\n  readDeck,\n  deleteDeck,\n  deleteCard,\n  listCards,\n  readCard,\n} from '../utils/api/index'\n\nexport default function Layout() {\n  const [deckCollection, setDeckCollection] = useState([])\n  const [currentDeck, setCurrentDeck] = useState([])\n  const [cardCollection, setCardCollection] = useState([])\n  const [currentCard, setCurrentCard] = useState([])\n\n  const history = useHistory()\n  const url = useRouteMatch()\n  const deckId = url.params.deckId\n  const cardId = url.params.cardId\n\n  function refreshPage() {\n    window.location.reload(true)\n  }\n\n  async function renderData() {\n    const setDecks = await listDecks()\n    await setDeckCollection(setDecks)\n    const setDeck = await readDeck(deckId)\n    await setCurrentDeck(setDeck)\n    const setCards = await listCards(deckId)\n    await setCardCollection(setCards)\n    if (cardId) {\n      const setCard = await readCard(cardId)\n      await setCurrentCard(setCard)\n    }\n  }\n\n  // Displays the collection of decks saved in the database\n  useEffect(() => {\n    async function displayDecks() {\n      const response = await listDecks()\n      setDeckCollection(response)\n    }\n    displayDecks()\n  }, [])\n\n  // Reads the selected deck's contents\n  function focusDeckHandler() {\n    async function findDeck() {\n      const response = await readDeck(deckId)\n      await setCurrentDeck(response)\n    }\n    findDeck()\n  }\n\n  function checkButton(event) {\n    console.log('You clicked a button with an id of:', event)\n  }\n\n  function deleteCardHandler(card) {\n    const id = card.id\n    deleteCard(id)\n    history.go(-2)\n    refreshPage()\n  }\n\n  async function deleteDeckHandler(deck) {\n    deleteDeck(deck.id)\n    history.push('/')\n    refreshPage()\n  }\n  return (\n    <div>\n      <Header />\n      <div className='container mb-2'>\n        <Switch>\n          <Route exact path='/'>\n            <Decks\n              deckCollection={deckCollection}\n              setCurrentDeck={setCurrentDeck}\n              deleteDeckHandler={deleteDeckHandler}\n              cardCollection={cardCollection}\n            />\n          </Route>\n          <Route path='/decks/new'>\n            <NewDeck\n              deckCollection={deckCollection}\n              setDeckCollection={setDeckCollection}\n            />\n          </Route>\n          <Route path='/decks/:deckId/study'>\n            <StudyDeck\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              setDeckCollection={setDeckCollection}\n              setCardCollection={setCardCollection}\n            />\n          </Route>\n          <Route exact path='/decks/:deckId'>\n            <Deck\n              renderData={renderData}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              setDeckCollection={setDeckCollection}\n              setCurrentCard={setCurrentCard}\n              cardCollection={cardCollection}\n              setCardCollection={setCardCollection}\n              deleteCardHandler={deleteCardHandler}\n              deleteDeckHandler={deleteDeckHandler}\n            />\n          </Route>\n          <Route exact path='/decks/:deckId/edit'>\n            <EditDeck\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              setDeckCollection={setDeckCollection}\n              setCardCollection={setCardCollection}\n              refreshPage={refreshPage}\n            />\n          </Route>\n          <Route exact path='/decks/:deckId/cards/new'>\n            <AddCard\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              cardCollection={cardCollection}\n              setCardCollection={setCardCollection}\n              setDeckCollection={setDeckCollection}\n              refreshPage={refreshPage}\n            />\n          </Route>\n          <Route exact path='/decks/:deckId/cards/:cardId/edit'>\n            <EditCard\n              currentCard={currentCard}\n              setCurrentCard={setCurrentCard}\n              currentDeck={currentDeck}\n              setCurrentDeck={setCurrentDeck}\n              setDeckCollection={setDeckCollection}\n              setCardCollection={setCardCollection}\n              refreshPage={refreshPage}\n            />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route  path=\"/\">\n          <Layout/>\n        </Route>\n        <Route></Route>\n      </Switch>\n    </div>\n  );\n}\n   \nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}